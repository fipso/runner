name: Build

on:
  push:
    branches: [ "main", "dev" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # Build staticly
  CGO_ENABLED: 0

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: oven-sh/setup-bun@v1

      - name: Install NodeJS dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dist
          path: ./dist

  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v ./...
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: runner
        path: ./runner

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: runner

      - uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
